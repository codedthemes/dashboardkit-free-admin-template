/**  =====================
  36. Customizer css start
==========================  **/
// main framework
$menu-styler: 375px;
$pct-colors: ();
$pct-colors: map-merge(
  (
    'primary': $primary,
    'success': $success,
    'info': $info,
    'warning': $warning,
    'danger': $danger,
    'dark': $dark
  ),
  $pct-colors
);

.pct-c-btn {
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding: 8px;
  border: 2px solid var(--bs-white);
  border-right: none;
  position: fixed;
  overflow: hidden;
  right: 0;
  top: 200px;
  z-index: 1030;
  transition: all 0.15s ease-in-out;
  border-radius: 8px 0 0 8px;
  box-shadow: -6px 0px 14px 1px rgba(27, 46, 94, 0.08);
  background: var(--bs-white);

  .pct-btn {
    padding: 0;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  @media (max-width: 1024px) {
    display: none;
  }
}

.pct-offcanvas {
  --bs-offcanvas-width: #{$menu-styler};
  --bs-offcanvas-zindex: 1079;

  transition: transform 0.45s cubic-bezier(0.37, 0.24, 0.53, 0.99);
  box-shadow: 8px 0 14px rgba(27, 46, 94, 0.4);

  ~ .offcanvas-backdrop {
    opacity: 0.2;
  }

  .offcanvas-body {
    padding: 25px;
  }

  .avtar.avtar-xs {
    width: 36px;
    height: 36px;
  }

  .list-group-item {
    padding: 20px 0;

    > div > .pct-content,
    a.btn {
      padding: var(--bs-list-group-item-padding-y) var(--bs-list-group-item-padding-x);
    }
  }
}

.preset-btn {
  height: 100px;
  border: 2px solid var(--bs-gray-300);
  --bs-btn-active-border-color: var(--bs-gray-300);

  &:hover {
    border-color: var(--bs-primary);
  }

  &:active,
  &.active {
    border-color: var(--bs-primary);
    background: rgba(var(--bs-primary-rgb), 0.12);

    .btn-label {
      color: var(--bs-primary);
    }
  }
}

.theme-color.preset-color {
  display: flex;
  position: relative;
  padding: 0;
  width: 100%;

  > a {
    position: relative;
    border-radius: var(--bs-border-radius);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    overflow: hidden;
    transition: all 0.15s ease-in-out;
    margin-right: 3px;
    width: 25px;
    height: 60px;
    flex: none;

    &::after {
      content: '';
      position: absolute;
      top: 5px;
      left: 5px;
      right: 5px;
      bottom: 5px;
      border-radius: 3px;
      background: rgba(255, 255, 255, 0.4);
      z-index: 1;
      transform: scale(0);
      transition: all 0.15s ease-in-out;
    }

    i {
      font-size: 20px;
      font-weight: 900;
      color: #fff;
      transform: scale(0);
      transition: all 0.15s ease-in-out;

      &::before {
        position: relative;
        z-index: 5;
      }
    }

    &:hover {
      &::after {
        transform: scale(1);
      }
    }

    &.active {
      flex: 1;

      &::after,
      i {
        transform: scale(1);
      }
    }
  }

  &.preset-color {
    $i: 1;

    @each $name, $value in $preset-colors {
      > a {
        &[data-value='preset-#{$i}'] {
          background: map-get($value, 'primary');
        }
      }

      $i: $i + 1;
    }
  }
}

.theme-color {
  .btn-label {
    margin: 4px 0 10px 20px;
    position: relative;
    display: block;
    text-align: left;

    &::before,
    &::after {
      content: '';
      position: absolute;
      left: -20px;
      top: -1px;
      width: 16px;
      height: 16px;
      border-radius: 50%;
    }

    &::before {
      background: var(--bs-primary);
      transform: scale(0);
    }

    &::after {
      border: 2px solid var(--bs-border-color);
    }
  }

  .pc-lay-icon {
    position: relative;
    width: 35px;
    height: 25px;
    border-radius: 3px;
    display: inline-block;
    background: var(--bs-body-bg);
    overflow: hidden;
    border: 1px solid var(--bs-border-color);

    span {
      position: absolute;
      display: flex;
      align-items: center;
      justify-content: center;

      &:nth-child(1),
      &:nth-child(3) {
        width: 32%;
        left: 0;
      }

      &:nth-child(1) {
        background: var(--pc-sidebar-background);
      }

      &:nth-child(3) {
        background: var(--pc-sidebar-background);
      }

      &:nth-child(2),
      &:nth-child(4) {
        z-index: 1;
        width: 70%;
        left: auto;
        right: 0;
        background: var(--bs-body-bg);
      }

      &:nth-child(1),
      &:nth-child(2) {
        top: 0;
        height: 35%;
      }

      &:nth-child(3),
      &:nth-child(4) {
        top: auto;
        bottom: 0;
        height: 75%;
      }

      &:nth-child(2) {
        background: var(--pc-header-background);
      }
    }
  }
}

.theme-layout {
  .btn {
    height: 100px;

    i {
      font-size: 26px;
    }
  }
}

.preset-btn {
  padding: 8px;
  width: 100%;
  line-height: 1;
  border-radius: 4px;
  background: rgb(0, 0, 0, 0.04);

  .pc-lay-icon {
    width: 100%;
    height: 50px;
  }

  &.active {
    border-color: var(--bs-primary);

    .btn-label {
      &::before {
        background: var(--bs-primary);
        transform: scale(0.5);
      }

      &::after {
        border-color: var(--bs-primary);
      }
    }
  }
}

.theme-layout {
  .btn[data-value='false'] {
    .pc-lay-icon {
      span {
        &:nth-child(1),
        &:nth-child(3) {
          background: lighten($dark, 8%);
        }

        &:nth-child(2),
        &:nth-child(4) {
          background: $dark;
        }
      }
    }
  }

  .btn[data-value='true'] {
    .pc-lay-icon {
      span {
        &:nth-child(1),
        &:nth-child(3) {
          background: var(--bs-white);
        }

        &:nth-child(2),
        &:nth-child(4) {
          background: $body-bg;
        }
      }
    }
  }
}

.theme-header-color {
  .btn[data-value='false'] {
    span:not(.btn-label) {
      &:nth-child(2) {
        background: var(--bs-white);
      }
    }
  }

  .btn[data-value='true'] {
    .pc-lay-icon {
      span {
        &:nth-child(2) {
          background: var(--bs-dark);
        }
      }
    }
  }
}

.theme-sidebar-color {
  .btn[data-value='false'] {
    span:not(.btn-label) {
      &:nth-child(1),
      &:nth-child(3) {
        background: var(--bs-white);
      }
    }
  }

  .btn[data-value='true'] {
    .pc-lay-icon {
      span {
        &:nth-child(1),
        &:nth-child(3) {
          background: var(--bs-dark);
        }
      }
    }
  }
}

.theme-nav-caption {
  .btn span {
    &:nth-child(3) {
      flex-direction: column;

      span {
        position: absolute;
        background: var(--pc-sidebar-active-color);
        height: 4px;
        width: 40% !important;
        left: 0 !important;
        right: auto;
        border-radius: 3px;

        &:before,
        &:after {
          border-radius: 3px;
          content: '';
          position: absolute;
          left: 0;
          background: var(--pc-sidebar-color);
          height: 3px;
          width: 150%;
        }

        &:before {
          top: 5px;
        }

        &:after {
          top: 10px;
        }

        &:nth-child(2) {
          top: 15px;
        }
      }
    }
  }

  .btn[data-value='false'] span {
    &:nth-child(3) {
      span {
        background: transparent;
      }
    }
  }
}

.theme-direction {
  .btn[data-value='false'] {
    span {
      &:nth-child(1),
      &:nth-child(3) {
        left: 0;
        right: auto;
      }

      &:nth-child(2),
      &:nth-child(4) {
        left: auto;
        right: 0;
      }
    }
  }

  .btn[data-value='true'] {
    .pc-lay-icon {
      span {
        &:nth-child(1),
        &:nth-child(3) {
          left: auto;
          right: 0;
        }

        &:nth-child(2),
        &:nth-child(4) {
          left: 0;
          right: auto;
        }
      }
    }
  }
}

.theme-container {
  .btn span {
    &:nth-child(4) {
      padding: 5px;

      &:after {
        content: '';
        position: absolute;
        left: 0;
        background: rgba(0, 0, 0, 0.15);
        height: 100%;
        width: 100%;
      }

      > span {
        border-radius: 3px;
        position: relative;
        z-index: 5;
        background: var(--bs-offcanvas-bg);
        height: 100%;
        width: 100%;
      }
    }
  }

  .btn[data-value='true'] span {
    &:nth-child(4) {
      > span {
        width: 60%;
      }
    }
  }
}

[data-pc-layout='compact'] [data-pc-layout='horizontal'] {
  .pc-rtl {
    display: none;
  }
}

.auth-main {
  ~ .pct-offcanvas {
    .pc-boxcontainer {
      display: none;
    }
  }
}

/**  =====================
  36. Customizer css end
==========================  **/
